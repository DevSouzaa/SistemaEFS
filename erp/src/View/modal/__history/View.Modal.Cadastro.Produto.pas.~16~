unit View.Modal.Cadastro.Produto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, View.Base.Tela.Modal, Vcl.ExtCtrls,
  acPNG, Vcl.StdCtrls, AdvCombo, AdvGroupBox, AdvOfficeButtons, CalcEdit,
  Vcl.WinXPanels, ProdutoCompleto, Controller.Produto, JvExStdCtrls, JvEdit,
  Vcl.Mask, JvExMask, JvToolEdit, JvBaseEdits, UFuncoes, ComboExpress,
  ComboBoxExpress, Vcl.Buttons;

type
  TViewModalCadastroProduto = class(TViewBaseTelaModal)
    PnlPrincipal: TPanel;
    EdtID: TEdit;
    EdtNome: TEdit;
    Edt_Referencia: TEdit;
    Edt_CodBarras: TEdit;
    Mm_OBS: TMemo;
    Label1: TLabel;
    Label2: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    CardPanel_Detalhes: TCardPanel;
    CBX_CUSTO: TGroupBox;
    Card_Valores: TCard;
    CBX_FISCAL: TGroupBox;
    CBX_OUTROS: TGroupBox;
    Label9: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    labelOutrasDesp: TLabel;
    Label16: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    EDT_ICMS: TEdit;
    EDT_IPI: TEdit;
    EDT_PISCOFINS: TEdit;
    Check_Ativo: TCheckBox;
    CheckFracionar: TCheckBox;
    EDT_NCM: TEdit;
    Edt_DescricaoNCM: TEdit;
    EDT_CUSTOINICIAL: TJvCalcEdit;
    EDT_VALORFRETE: TJvCalcEdit;
    EDT_OUTRASDESPESAS: TJvCalcEdit;
    EDT_CUSTOENTRADA: TJvCalcEdit;
    EDT_MARGEMLUCRO: TJvCalcEdit;
    EDT_VALORVENDA: TJvCalcEdit;
    EDT_ESTOQUE: TJvCalcEdit;
    CBB_Grupo: TComboBoxExpress;
    CBB_SubGrupo: TComboBoxExpress;
    CBB_Fabricante: TComboBoxExpress;
    SpeedButton1: TSpeedButton;
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormShow(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure LblBtnGravarClick(Sender: TObject);
  private
    FControllerProduto: TControllerProduto;
    procedure CarregarProduto(Id: Integer);
    procedure SalvarProduto;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  ViewModalCadastroProduto: TViewModalCadastroProduto;

implementation

{$R *.dfm}

procedure TViewModalCadastroProduto.FormCreate(Sender: TObject);
begin
  inherited;
  FControllerProduto := TControllerProduto.Create;
end;

procedure TViewModalCadastroProduto.FormDestroy(Sender: TObject);
begin
  inherited;
  FreeAndNil(FControllerProduto);
end;

procedure TViewModalCadastroProduto.FormKeyDown(Sender: TObject; var Key: Word;Shift: TShiftState);
begin//Key Down
  inherited;
  case key of

  VK_ESCAPE:
    Begin
      self.Close;
    End;

  end;
end;

procedure TViewModalCadastroProduto.FormShow(Sender: TObject);
begin
  inherited;
  if IDPesquisa <> 0 then
    CarregarProduto(IDPesquisa);
end;
procedure TViewModalCadastroProduto.LblBtnGravarClick(Sender: TObject);
begin
  inherited;
  SalvarProduto;
    fnc_CriarMensagem('CADASTRO DE PRODUTOS', 'CONFIRMANDO DADOS',
            'PRODUTO CADASTRADO COM SUCESSO!',
            ExtractFilepath(Application.ExeName) +
            '\Icones\Confirmacao.png', 'OK');
  self.Close;
end;

procedure TViewModalCadastroProduto.CarregarProduto(Id: Integer);
var
  Produto: TProdutoCompleto;
begin
  Produto := FControllerProduto.ObterPorId(Id);
  if Assigned(Produto) then
  try
    EdtID.Text := Produto.IdProduto.ToString;
    EdtNome.Text := Produto.Descricao;
    Edt_Referencia.Text := Produto.Referencia;
    Edt_CodBarras.Text := Produto.CodBarras;
    CBB_Grupo.SelectByID(Produto.IdGrupo) ;
    CBB_SubGrupo.SelectByID(Produto.IdSubgrupo);
    CBB_Fabricante.SelectByID(Produto.IdFabricante);
    Mm_OBS.Text := Produto.InfAdicionais;
    EDT_VALORFRETE.Value := Produto.Item.ValorFreteCompra;
    EDT_CUSTOINICIAL.Value := Produto.Item.ValorCustoInicial;
    EDT_OUTRASDESPESAS.Value := Produto.Item.ValorOutrosCustos;
    EDT_CUSTOENTRADA.Value := Produto.Item.ValorCustoEntrada;
    EDT_ESTOQUE.Value := Produto.Item.Estoque;
    EDT_VALORVENDA.Value := Produto.Item.ValorVendaVista;
    EDT_MARGEMLUCRO.Value := Produto.Item.ValorPercentualMargemLucro;
    EDT_ICMS.Text := Produto.Item.ICMSCompra.ToString;
    EDT_IPI.Text := Produto.Item.IPICompra.ToString;
    EDT_PISCOFINS.Text := IntToStr(Produto.CSTPisCofinsEntrada);//AliquotaPISCompra.ToString + ' / ' + Produto.Item.AliquotaCOFINSCompra.ToString;
    Check_Ativo.Checked := Produto.Ativo;
    CheckFracionar.Checked := Produto.VendeFracionado;
    EDT_NCM.Text := Produto.NCM;
    Edt_DescricaoNCM.Text := Produto.DescricaoNCM;
  finally
    Produto.Free;
  end;
end;
procedure TViewModalCadastroProduto.SalvarProduto;
var
  Produto: TProdutoCompleto;
begin
  Produto := TProdutoCompleto.Create;
  try
    Produto.IdProduto := StrToIntDef(EdtID.Text, 0);
    Produto.Descricao := EdtNome.Text;
    Produto.Referencia := Edt_Referencia.Text;
    Produto.CodBarras := Edt_CodBarras.Text;
    Produto.IdGrupo                := CBB_Grupo.SelectedID;
    Produto.IdSubgrupo             := CBB_SubGrupo.SelectedID;
    Produto.IdFabricante           := CBB_Fabricante.SelectedID;
    Produto.InfAdicionais          := Mm_OBS.Text;
    Produto.Item.ValorFreteCompra  := EDT_VALORFRETE.Value;
    Produto.Item.ValorCustoInicial := EDT_CUSTOINICIAL.Value;
    Produto.Item.ValorOutrosCustos := EDT_OUTRASDESPESAS.Value;
    Produto.Item.ValorCustoEntrada := EDT_CUSTOENTRADA.Value;
    Produto.Item.Estoque := EDT_ESTOQUE.Value;
    Produto.Item.ValorVendaVista := EDT_VALORVENDA.Value;
    Produto.Item.ValorPercentualMargemLucro := EDT_MARGEMLUCRO.Value;
    Produto.Item.ICMSCompra := StrToFloatDef(EDT_ICMS.Text, 0);
    Produto.Item.IPICompra := StrToFloatDef(EDT_IPI.Text, 0);
    Produto.CSTPisCofinsEntrada := StrToInt(EDT_PISCOFINS.Text);
    Produto.Ativo := Check_Ativo.Checked;
    Produto.VendeFracionado := CheckFracionar.Checked;
    Produto.NCM := EDT_NCM.Text;
    Produto.DescricaoNCM := Edt_DescricaoNCM.Text;
    if Produto.IdProduto = 0 then
      FControllerProduto.Inserir(Produto)
    else
      FControllerProduto.Atualizar(Produto);
  finally
    Produto.Free;
  end;
end;
end.
